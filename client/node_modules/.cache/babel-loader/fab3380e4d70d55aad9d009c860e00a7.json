{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    totalOrder: 0,\n    itemCount: 0,\n    items: {}\n  },\n  reducers: {\n    addItem: (state, action) => {\n      const item = state.items[action.payload.food_id];\n      console.log(\"food id:\", action.payload); //console.log(\"cartSlice \",state.items[action.payload.food_id]);\n\n      if (item === undefined) {\n        state.items[action.payload.food_id] = {\n          food_id: action.payload.food_id,\n          qty: 1\n        };\n      } else {\n        item.qty++;\n      }\n\n      state.itemCount++;\n      state.totalOrder = state.totalOrder + action.payload.price;\n    },\n    removeItem: (state, action) => {\n      const item = state.items[action.payload.food_id];\n      if (item === undefined) return;\n      item.qty === 1 ? delete state.items[action.payload.food_id] : item.qty--;\n      state.itemCount--;\n      state.totalOrder = state.totalOrder - action.payload.price;\n    }\n  }\n});\nexport const {\n  addItem,\n  removeItem\n} = cartSlice.actions;\nexport const selectCartItem = state => state.cart.items;\nexport const selectCartCount = state => state.cart.itemCount;\nexport const selectTotalOrder = state => state.cart.totalOrder;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/Geza/Documents/Code/toodz-menu/client/src/redux/cartSlice.js"],"names":["createSlice","cartSlice","name","initialState","totalOrder","itemCount","items","reducers","addItem","state","action","item","payload","food_id","console","log","undefined","qty","price","removeItem","actions","selectCartItem","cart","selectCartCount","selectTotalOrder","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACjCE,EAAAA,IAAI,EAAE,MAD2B;AAEjCC,EAAAA,YAAY,EAAC;AACTC,IAAAA,UAAU,EAAE,CADH;AAETC,IAAAA,SAAS,EAAE,CAFF;AAGTC,IAAAA,KAAK,EAAE;AAHE,GAFoB;AAOjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAkB;AACvB,YAAMC,IAAI,GAAGF,KAAK,CAACH,KAAN,CAAYI,MAAM,CAACE,OAAP,CAAeC,OAA3B,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,MAAM,CAACE,OAA/B,EAFuB,CAGvB;;AACA,UAAGD,IAAI,KAAKK,SAAZ,EAAsB;AAClBP,QAAAA,KAAK,CAACH,KAAN,CAAYI,MAAM,CAACE,OAAP,CAAeC,OAA3B,IAAsC;AAClCA,UAAAA,OAAO,EAAEH,MAAM,CAACE,OAAP,CAAeC,OADU;AAElCI,UAAAA,GAAG,EAAE;AAF6B,SAAtC;AAIH,OALD,MAKM;AACFN,QAAAA,IAAI,CAACM,GAAL;AACH;;AACDR,MAAAA,KAAK,CAACJ,SAAN;AAEAI,MAAAA,KAAK,CAACL,UAAN,GAAmBK,KAAK,CAACL,UAAN,GAAkBM,MAAM,CAACE,OAAP,CAAeM,KAApD;AACH,KAhBK;AAkBNC,IAAAA,UAAU,EAAE,CAACV,KAAD,EAASC,MAAT,KAAoB;AAC5B,YAAMC,IAAI,GAAGF,KAAK,CAACH,KAAN,CAAYI,MAAM,CAACE,OAAP,CAAeC,OAA3B,CAAb;AACA,UAAIF,IAAI,KAAKK,SAAb,EAAyB;AACzBL,MAAAA,IAAI,CAACM,GAAL,KAAa,CAAb,GAAiB,OAAOR,KAAK,CAACH,KAAN,CAAYI,MAAM,CAACE,OAAP,CAAeC,OAA3B,CAAxB,GAA8DF,IAAI,CAACM,GAAL,EAA9D;AACAR,MAAAA,KAAK,CAACJ,SAAN;AACAI,MAAAA,KAAK,CAACL,UAAN,GAAmBK,KAAK,CAACL,UAAN,GAAmBM,MAAM,CAACE,OAAP,CAAeM,KAArD;AACH;AAxBK;AAPuB,CAAD,CAA7B;AAmCP,OAAO,MAAM;AAAEV,EAAAA,OAAF;AAAWW,EAAAA;AAAX,IAAyBlB,SAAS,CAACmB,OAAzC;AACP,OAAO,MAAMC,cAAc,GAAIZ,KAAD,IAAWA,KAAK,CAACa,IAAN,CAAWhB,KAA7C;AACP,OAAO,MAAMiB,eAAe,GAAId,KAAD,IAAWA,KAAK,CAACa,IAAN,CAAWjB,SAA9C;AACP,OAAO,MAAMmB,gBAAgB,GAAIf,KAAD,IAAWA,KAAK,CAACa,IAAN,CAAWlB,UAA/C;AACP,eAAeH,SAAS,CAACwB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const cartSlice = createSlice({\n    name: \"cart\",\n    initialState:{\n        totalOrder: 0,\n        itemCount: 0,\n        items: {},\n    },\n    reducers: {\n        addItem: (state, action) =>{\n            const item = state.items[action.payload.food_id];\n            console.log(\"food id:\", action.payload)\n            //console.log(\"cartSlice \",state.items[action.payload.food_id]);\n            if(item === undefined){\n                state.items[action.payload.food_id] = {\n                    food_id: action.payload.food_id,\n                    qty: 1,\n                };\n            }else {\n                item.qty++;\n            }\n            state.itemCount++;\n            \n            state.totalOrder = state.totalOrder +action.payload.price; \n        },\n\n        removeItem: (state , action) => {\n            const item = state.items[action.payload.food_id];\n            if (item === undefined ) return;\n            item.qty === 1 ? delete state.items[action.payload.food_id] : item.qty--;\n            state.itemCount--;\n            state.totalOrder = state.totalOrder - action.payload.price;\n        },\n    }\n});\n\nexport const { addItem, removeItem} = cartSlice.actions;\nexport const selectCartItem = (state) => state.cart.items;\nexport const selectCartCount = (state) => state.cart.itemCount;\nexport const selectTotalOrder = (state) => state.cart.totalOrder;\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}