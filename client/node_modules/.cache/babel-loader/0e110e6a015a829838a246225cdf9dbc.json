{"ast":null,"code":"var _jsxFileName = \"/Users/Geza/Documents/Code/toodz-menu/client/src/components/specific/atom/cart/Cart.jsx\";\nimport React, { useState } from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport Badge from '@material-ui/core/Badge'; //import Modal from '@material-ui/core/Modal';\n\nimport './cart.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addItem, removeItem, selectCartCount, selectCartItem } from '../../../../redux/cartSlice';\nimport { selectRestoMenu } from '../../../../redux/restoSlice';\nimport { CardMenuMini } from '../..';\nimport { Button, ButtonGroup, Dialog } from '@material-ui/core';\n\nconst Cart = () => {\n  const count = useSelector(selectCartCount);\n  const items = useSelector(selectCartItem);\n  const menu = useSelector(selectRestoMenu);\n  const dispatch = useDispatch(); //loadRestoAsync();\n  // const handleCartClick = (e) =>{\n  //     e.preventDefault();\n  //     if (count === 0 ) return console.log(\"cart Kosong bego\"); //cek cart kosong apa tidak\n  //     const total = Object.values(items).reduce((acc, item) =>{\n  //         const menuItem = menu[item.food_id];\n  //         if( menuItem !== undefined) return  acc = menuItem.price * item.qty\n  //         return acc = menuItem.price * item.qty\n  //     });\n  //     console.log(\"total: \", total)\n  // };\n  // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [open, setOpen] = useState(false);\n  const [counter, setCounter] = useState(0);\n  console.log(\"cart :\", Object.values(items));\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"papper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Your Order\"), items !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, Object.values(items).map((data, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail-cart\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardMenuMini, {\n    image: menu.find(x => x.food_id === data.food_id).img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, menu.find(x => x.food_id === data.food_id).title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"qty-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    size: \"small\",\n    \"aria-label\": \"small outlined button group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: e => {\n      e.preventDefault();\n      dispatch(removeItem({\n        food_id: data.food_id\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }\n  }, data.qty), /*#__PURE__*/React.createElement(Button, {\n    onClick: e => {\n      e.preventDefault();\n      dispatch(addItem({\n        food_id: data.food_id\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }\n  }, \"+\")))))) : '', /*#__PURE__*/React.createElement(Cart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n\n  const handleOpen = () => {\n    if (count !== 0) if (open === true) return setOpen(false);\n    return setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; //setTimeout(() =>{console.log(menu)},2000)\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    className: \"fab\",\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: count,\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ShoppingCartIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    scroll: \"body\",\n    fullWidth: true //fullScreen={true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, body));\n};\n\nexport default Cart;","map":{"version":3,"sources":["/Users/Geza/Documents/Code/toodz-menu/client/src/components/specific/atom/cart/Cart.jsx"],"names":["React","useState","Fab","ShoppingCartIcon","Badge","useDispatch","useSelector","addItem","removeItem","selectCartCount","selectCartItem","selectRestoMenu","CardMenuMini","Button","ButtonGroup","Dialog","Cart","count","items","menu","dispatch","open","setOpen","counter","setCounter","console","log","Object","values","body","undefined","map","data","index","find","x","food_id","img","title","e","preventDefault","qty","handleOpen","handleClose"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Fab from '@material-ui/core/Fab'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\nimport Badge from '@material-ui/core/Badge'\n//import Modal from '@material-ui/core/Modal';\n\nimport './cart.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addItem, removeItem, selectCartCount, selectCartItem } from '../../../../redux/cartSlice'\nimport { selectRestoMenu } from '../../../../redux/restoSlice'\nimport { CardMenuMini } from '../..';\nimport { Button, ButtonGroup, Dialog } from '@material-ui/core';\n\n\n\nconst Cart = () => {\n    const count = useSelector(selectCartCount);\n    const items  = useSelector(selectCartItem);\n    const menu = useSelector(selectRestoMenu);\n\n    const dispatch = useDispatch();\n\n    //loadRestoAsync();\n\n    // const handleCartClick = (e) =>{\n    //     e.preventDefault();\n    //     if (count === 0 ) return console.log(\"cart Kosong bego\"); //cek cart kosong apa tidak\n        \n    //     const total = Object.values(items).reduce((acc, item) =>{\n    //         const menuItem = menu[item.food_id];\n    //         if( menuItem !== undefined) return  acc = menuItem.price * item.qty\n            \n    //         return acc = menuItem.price * item.qty\n    //     });\n    //     console.log(\"total: \", total)\n    // };\n\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  \n  const [open, setOpen] = useState(false);\n  const [counter, setCounter] = useState(0);\n  \n  console.log( \"cart :\",Object.values(items) )\n  const body = (\n    <div className=\"papper\">\n        <h3>Your Order</h3>\n        {items !== undefined ?\n          <div>\n            {\n              Object.values(items).map((data, index) => (\n                \n                <div className=\"detail-cart\" key={index}>\n                    <div className=\"product\">\n                          <CardMenuMini image={menu.find(x => x.food_id === data.food_id).img}/>\n                    </div>\n                    <div className=\"title-product\">\n                        <p>{menu.find(x => x.food_id === data.food_id).title}</p>\n                        {/* //{console.log(\"data cart:\", data.food_id , \"data menu :\" , menu[data.food_id] )} */}\n                    </div>\n                    <div className=\"qty-custom\">\n                    <ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\n\n                    <Button onClick={(e) => {\n                       e.preventDefault();\n                       dispatch(removeItem({food_id: data.food_id}));\n                      }}>-</Button>\n\n                      <Button disabled>{data.qty}</Button>\n\n                      <Button onClick={(e)=> {\n                        e.preventDefault();\n                        dispatch(addItem({food_id: data.food_id}));\n                      }}>+</Button>\n\n                      \n\n                      </ButtonGroup>\n                    </div>\n                </div>\n              ))\n            }\n          </div>\n          :\n          ''\n        }\n             \n      <Cart />\n    </div>\n  );\n\n  const handleOpen = () => {\n    if (count !== 0 )\n    if (open === true) return setOpen(false) \n    return setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n    //setTimeout(() =>{console.log(menu)},2000)\n    return (\n        <div>\n            <Fab className=\"fab\" color=\"primary\" aria-label=\"add\" onClick={handleOpen}>\n                <Badge badgeContent={count} color=\"error\">\n                    <ShoppingCartIcon />\n                </Badge>\n            </Fab>\n            {/* <Modal\n                open={open}\n                onClose={handleClose}\n              > */}\n                  <Dialog \n                    open={open}\n                    onClose={handleClose}\n                    scroll=\"body\"\n                    fullWidth={true}\n                    //fullScreen={true}\n                    \n                  >{body}</Dialog>\n                  \n            {/* </Modal> */}\n        </div>\n    )\n}\n\nexport default Cart"]},"metadata":{},"sourceType":"module"}